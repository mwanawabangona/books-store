{"version":3,"sources":["redux/Books/books.js","redux/configureStore.js","components/AddNewBook.js","components/BookItem.js","components/Books.js","components/BooksPage.js","components/CategoryPage.js","components/Navbar.js","components/Bookstore.js","index.js"],"names":["ADD_BOOK","REMOVE_BOOK","initialState","booksReducer","state","action","type","payload","filter","book","id","reducer","combineReducers","store","createStore","applyMiddleware","logger","AddNewBook","useState","booktitle","category","inputValues","setInputValues","dispatch","useDispatch","submitBookToStore","e","preventDefault","uuidv4","onChange","target","name","value","className","onSubmit","placeholder","required","onClick","BookItem","Books","bookList","map","BooksPage","useSelector","CategoryPage","Navbar","to","Bookstore","exact","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNACMA,EAAW,2BACXC,EAAc,8BAEdC,EAAe,GAyBNC,EAbM,WAAmC,IAAlCC,EAAiC,uDAAzBF,EAAcG,EAAW,uCACrD,OAAQA,EAAOC,MACb,KAAKN,EACH,MAAM,GAAN,mBAAWI,GAAX,CAAkBC,EAAOE,UAE3B,KAAKN,EACH,OAAOG,EAAMI,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAOL,EAAOE,WAEnD,QACE,OAAOH,ICnBPO,EAAUC,YAAgB,CAC9BT,iBASaU,EALDC,YACZH,EACAI,YAAgBC,M,4CCwCHC,EAhDI,WACjB,MAAsCC,mBAAS,CAC7CC,UAAW,GACXC,SAAU,KAFZ,mBAAOC,EAAP,KAAoBC,EAApB,KAIMC,EAAWC,cAEXC,EAAoB,SAACC,GACzBA,EAAEC,iBACF,IAAMjB,EAAKkB,cACHT,EAAwBE,EAAxBF,UAAWC,EAAaC,EAAbD,SAMnBG,EFfiC,CACnCjB,KAAMN,EACNO,QEQkB,CACdY,YACAT,KACAU,eAKES,EAAW,SAACH,GAChBJ,EAAe,2BACVD,GADS,kBAEXK,EAAEI,OAAOC,KAAOL,EAAEI,OAAOE,UAI9B,OACE,uBAAMC,UAAU,mBAAmBC,SAAUT,EAA7C,UACE,8CACA,uBACEnB,KAAK,OACL6B,YAAY,aACZJ,KAAK,YACLF,SAAUA,EACVO,UAAQ,IAEV,yBAAQD,YAAY,aAAaJ,KAAK,WAAWF,SAAUA,EAAUO,UAAQ,EAA7E,UACE,8CACA,wBAAQJ,MAAM,UAAd,qBACA,wBAAQA,MAAM,cAAd,yBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,sBAEF,wBAAQ1B,KAAK,SAAS+B,QAASZ,EAA/B,0BCVSa,EAjCE,SAAC,GAAc,IAAZ7B,EAAW,EAAXA,KAEhBU,EACEV,EADFU,UAAWT,EACTD,EADSC,GAAIU,EACbX,EADaW,SAEXG,EAAWC,cAEjB,OACE,+BACE,sCAEG,IACCL,KAEJ,0CAEG,IACAC,KAEH,wBAAQd,KAAK,SAAS+B,QAAS,kBAAMd,EHZH,CACtCjB,KAAML,EACNM,QGU6DG,KAAzD,sBAXOA,ICQE6B,EAhBD,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACZ,oBAAIP,UAAU,qBAAd,SACGO,EAASC,KAAI,SAAChC,GAAD,OACZ,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKC,UCQXgC,EAVG,WAChB,IAAMF,EAAWG,aAAY,SAACvC,GAAD,OAAWA,EAAMD,gBAC9C,OACE,sBAAK8B,UAAU,QAAf,UACE,cAAC,EAAD,CAAOO,SAAUA,IACjB,cAAC,EAAD,QCFSI,EANM,kBACnB,8BACE,yDCSWC,EAVA,kBACb,sBAAKZ,UAAU,aAAf,UACE,+CACA,+BACE,6BAAI,cAAC,IAAD,CAAMa,GAAG,IAAT,qBACJ,6BAAI,cAAC,IAAD,CAAMA,GAAG,cAAT,iCCSKC,G,MAVG,kBAChB,qCACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,QAAS,cAAC,EAAD,MAC/B,cAAC,IAAD,CAAOD,KAAK,cAAcC,QAAS,cAAC,EAAD,cCLzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUxC,MAAOA,EAAjB,SACE,cAAC,EAAD,UAINyC,SAASC,eAAe,W","file":"static/js/main.ce578f1a.chunk.js","sourcesContent":["// Redux\nconst ADD_BOOK = 'bookStore/books/ADD_BOOK';\nconst REMOVE_BOOK = 'bookStore/books/REMOVE_BOOK';\n\nconst initialState = [];\n\nexport const addBook = (payload) => ({\n  type: ADD_BOOK,\n  payload,\n});\n\nexport const removeBook = (payload) => ({\n  type: REMOVE_BOOK,\n  payload,\n});\n\nconst booksReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_BOOK:\n      return [...state, action.payload];\n\n    case REMOVE_BOOK:\n      return state.filter((book) => book.id !== action.payload);\n\n    default:\n      return state;\n  }\n};\n\nexport default booksReducer;\n","// configureStore.js\n\nimport { createStore, combineReducers, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport booksReducer from './Books/books';\n\nconst reducer = combineReducers({\n  booksReducer,\n  // additional reducers could be added here\n});\n\nconst store = createStore(\n  reducer,\n  applyMiddleware(logger),\n);\n\nexport default store;\n","import React, { useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { useDispatch } from 'react-redux';\nimport { addBook } from '../redux/Books/books';\n\nconst AddNewBook = () => {\n  const [inputValues, setInputValues] = useState({\n    booktitle: '',\n    category: '',\n  });\n  const dispatch = useDispatch();\n\n  const submitBookToStore = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    const { booktitle, category } = inputValues;\n    const newBook = {\n      booktitle,\n      id,\n      category,\n    };\n    dispatch(addBook(newBook));\n  };\n\n  const onChange = (e) => {\n    setInputValues({\n      ...inputValues,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  return (\n    <form className=\"add-book-section\" onSubmit={submitBookToStore}>\n      <h1>ADD NEW BOOK</h1>\n      <input\n        type=\"text\"\n        placeholder=\"Book title\"\n        name=\"booktitle\"\n        onChange={onChange}\n        required\n      />\n      <select placeholder=\"categories\" name=\"category\" onChange={onChange} required>\n        <option>Category</option>\n        <option value=\"Romance\">Romance</option>\n        <option value=\"Documentary\">Documentary</option>\n        <option value=\"Fiction\">Fiction</option>\n        <option value=\"Crime\">Crime</option>\n      </select>\n      <button type=\"submit\" onClick={submitBookToStore}>Add Book</button>\n    </form>\n  );\n};\n\nexport default AddNewBook;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { removeBook } from '../redux/Books/books';\n\nconst BookItem = ({ book }) => {\n  const {\n    booktitle, id, category,\n  } = book;\n  const dispatch = useDispatch();\n\n  return (\n    <li key={id}>\n      <p>\n        Book:\n        {' '}\n        { booktitle }\n      </p>\n      <p>\n        Category:\n        {' '}\n        {category}\n      </p>\n      <button type=\"button\" onClick={() => dispatch(removeBook(id))}>Remove</button>\n    </li>\n  );\n};\n\nBookItem.propTypes = {\n  book: PropTypes.shape(\n    {\n      booktitle: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      category: PropTypes.string.isRequired,\n    },\n  ).isRequired,\n};\n\nexport default BookItem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport BookItem from './BookItem';\n\nconst Books = ({ bookList }) => (\n  <ul className=\"books-list-section\">\n    {bookList.map((book) => (\n      <BookItem key={book.id} book={book} />\n    ))}\n  </ul>\n);\n\nBooks.propTypes = {\n  bookList: PropTypes.arrayOf(PropTypes.shape(\n    {\n      id: PropTypes.string.isRequired,\n    },\n  )).isRequired,\n};\n\nexport default Books;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport AddNewBook from './AddNewBook';\nimport Books from './Books';\n\nconst BooksPage = () => {\n  const bookList = useSelector((state) => state.booksReducer);\n  return (\n    <div className=\"books\">\n      <Books bookList={bookList} />\n      <AddNewBook />\n    </div>\n  );\n};\n\nexport default BooksPage;\n","import React from 'react';\n\nconst CategoryPage = () => (\n  <div>\n    <h1>Under construction!!</h1>\n  </div>\n);\n\nexport default CategoryPage;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navbar = () => (\n  <nav className=\"navigation\">\n    <h1>Bookstore CMS</h1>\n    <ul>\n      <li><Link to=\"/\">BOOKS</Link></li>\n      <li><Link to=\"/categories\">CATEGORIES</Link></li>\n    </ul>\n  </nav>\n);\n\nexport default Navbar;\n","import React from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport BooksPage from './BooksPage';\nimport CategoryPage from './CategoryPage';\nimport Navbar from './Navbar';\nimport '../index.css';\n\nconst Bookstore = () => (\n  <>\n    <Navbar />\n    <Routes>\n      <Route exact path=\"/\" element={<BooksPage />} />\n      <Route path=\"/categories\" element={<CategoryPage />} />\n    </Routes>\n  </>\n);\n\nexport default Bookstore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/configureStore';\nimport Bookstore from './components/Bookstore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <Bookstore />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}